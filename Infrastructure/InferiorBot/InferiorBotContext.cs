// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Infrastructure.InferiorBot;

public partial class InferiorBotContext : DbContext
{
    public InferiorBotContext(DbContextOptions<InferiorBotContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ConvertedUrl> ConvertedUrls { get; set; }

    public virtual DbSet<Guild> Guilds { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ConvertedUrl>(entity =>
        {
            entity.HasKey(e => new { e.GuildId, e.ChannelId, e.MessageId }).HasName("converted_urls_pkey1");

            entity.ToTable("converted_urls");

            entity.Property(e => e.GuildId)
                .HasPrecision(19)
                .HasColumnName("guild_id");
            entity.Property(e => e.ChannelId)
                .HasPrecision(19)
                .HasColumnName("channel_id");
            entity.Property(e => e.MessageId)
                .HasPrecision(19)
                .HasColumnName("message_id");
            entity.Property(e => e.DatePosted)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("date_posted");
            entity.Property(e => e.OriginalUrl)
                .IsRequired()
                .HasMaxLength(2048)
                .HasColumnName("original_url");
            entity.Property(e => e.UserId)
                .HasPrecision(19)
                .HasColumnName("user_id");

            entity.HasOne(d => d.Guild).WithMany(p => p.ConvertedUrls)
                .HasForeignKey(d => d.GuildId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("converted_urls_guild_id_fkey");

            entity.HasOne(d => d.User).WithMany(p => p.ConvertedUrls)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("converted_urls_user_id_fkey1");
        });

        modelBuilder.Entity<Guild>(entity =>
        {
            entity.HasKey(e => e.GuildId).HasName("guilds_pkey");

            entity.ToTable("guilds");

            entity.HasIndex(e => e.GuildId, "guilds_guild_id_key").IsUnique();

            entity.Property(e => e.GuildId)
                .HasPrecision(19)
                .HasColumnName("guild_id");
            entity.Property(e => e.BotChannels)
                .IsRequired()
                .HasDefaultValueSql("ARRAY[]::numeric[]")
                .HasColumnType("numeric(19,0)[]")
                .HasColumnName("bot_channels");
            entity.Property(e => e.ConvertUrls).HasColumnName("convert_urls");
            entity.Property(e => e.DjRoles)
                .IsRequired()
                .HasDefaultValueSql("ARRAY[]::numeric[]")
                .HasColumnType("numeric(19,0)[]")
                .HasColumnName("dj_roles");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("users_pkey");

            entity.ToTable("users");

            entity.HasIndex(e => e.UserId, "users_user_id_key").IsUnique();

            entity.Property(e => e.UserId)
                .HasPrecision(19)
                .HasColumnName("user_id");
            entity.Property(e => e.Balance)
                .HasDefaultValueSql("100")
                .HasColumnType("money")
                .HasColumnName("balance");
            entity.Property(e => e.Banned).HasColumnName("banned");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}